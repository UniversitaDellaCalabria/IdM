# Generated by Django 2.1.4 on 2019-02-18 14:37

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import identity.models
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractIdentityAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=150, null=True, verbose_name='Address')),
                ('locality_name', models.CharField(blank=True, max_length=135, null=True, verbose_name='Locality')),
                ('state', models.CharField(blank=True, max_length=60, null=True, verbose_name='Region')),
                ('postal_code', models.CharField(blank=True, max_length=60, null=True, verbose_name='Cap')),
                ('country_name', models.CharField(blank=True, help_text='Country', max_length=128, null=True)),
                ('note', models.TextField(blank=True, max_length=768, null=True)),
                ('primary', models.BooleanField(default=False, verbose_name='Main delivery address')),
            ],
            options={
                'verbose_name_plural': 'Address book',
            },
        ),
        migrations.CreateModel(
            name='AdditionalAffiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('faculty', 'faculty'), ('student', 'student'), ('staff', 'staff'), ('alum', 'alum'), ('member', 'member'), ('affiliate', 'affiliate'), ('employee', 'employee'), ('library-walk-in', 'library-walk-in')], max_length=32)),
                ('unique_code', models.CharField(blank=True, default='', max_length=64)),
                ('origin', models.CharField(default='testunical.it', help_text='istitution of orgin, where the guest came from', max_length=254)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Additional Affiliation',
                'verbose_name_plural': 'Additional Affiliations',
            },
        ),
        migrations.CreateModel(
            name='AddressType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='delivery type as email, telephone...', max_length=12, unique=True)),
                ('description', models.CharField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('flusso', models.CharField(choices=[('de-visu', 'de-visu'), ('SPID', 'SPID'), ('Esse3', 'Esse3'), ('CSA', 'CSA'), ('import', 'Import')], default='', help_text='How this entry was created in the DB', max_length=135, verbose_name='Flow')),
                ('descrizione_flusso', models.TextField(blank=True, verbose_name='Flow description')),
                ('protocollo_numero', models.CharField(blank=True, max_length=150, null=True, verbose_name='Record number (Prot.num.)')),
                ('protocollo_anno', models.CharField(blank=True, max_length=4, null=True, verbose_name='Record year (Prot. year)')),
                ('data_attivazione', models.DateTimeField(blank=True, help_text='When this identity was activated', null=True)),
                ('personal_title', models.CharField(blank=True, max_length=12, null=True)),
                ('name', models.CharField(help_text='Name', max_length=256)),
                ('surname', models.CharField(max_length=135)),
                ('email', models.EmailField(max_length=254)),
                ('telephone', models.CharField(blank=True, max_length=135, null=True)),
                ('common_name', models.CharField(blank=True, help_text='Common Name', max_length=256, null=True)),
                ('nation', models.CharField(choices=[('AW', 'AW'), ('AF', 'AF'), ('AO', 'AO'), ('AI', 'AI'), ('AX', 'AX'), ('AL', 'AL'), ('AD', 'AD'), ('AE', 'AE'), ('AR', 'AR'), ('AM', 'AM'), ('AS', 'AS'), ('AQ', 'AQ'), ('TF', 'TF'), ('AG', 'AG'), ('AU', 'AU'), ('AT', 'AT'), ('AZ', 'AZ'), ('BI', 'BI'), ('BE', 'BE'), ('BJ', 'BJ'), ('BQ', 'BQ'), ('BF', 'BF'), ('BD', 'BD'), ('BG', 'BG'), ('BH', 'BH'), ('BS', 'BS'), ('BA', 'BA'), ('BL', 'BL'), ('BY', 'BY'), ('BZ', 'BZ'), ('BM', 'BM'), ('BO', 'BO'), ('BR', 'BR'), ('BB', 'BB'), ('BN', 'BN'), ('BT', 'BT'), ('BV', 'BV'), ('BW', 'BW'), ('CF', 'CF'), ('CA', 'CA'), ('CC', 'CC'), ('CH', 'CH'), ('CL', 'CL'), ('CN', 'CN'), ('CI', 'CI'), ('CM', 'CM'), ('CD', 'CD'), ('CG', 'CG'), ('CK', 'CK'), ('CO', 'CO'), ('KM', 'KM'), ('CV', 'CV'), ('CR', 'CR'), ('CU', 'CU'), ('CW', 'CW'), ('CX', 'CX'), ('KY', 'KY'), ('CY', 'CY'), ('CZ', 'CZ'), ('DE', 'DE'), ('DJ', 'DJ'), ('DM', 'DM'), ('DK', 'DK'), ('DO', 'DO'), ('DZ', 'DZ'), ('EC', 'EC'), ('EG', 'EG'), ('ER', 'ER'), ('EH', 'EH'), ('ES', 'ES'), ('EE', 'EE'), ('ET', 'ET'), ('FI', 'FI'), ('FJ', 'FJ'), ('FK', 'FK'), ('FR', 'FR'), ('FO', 'FO'), ('FM', 'FM'), ('GA', 'GA'), ('GB', 'GB'), ('GE', 'GE'), ('GG', 'GG'), ('GH', 'GH'), ('GI', 'GI'), ('GN', 'GN'), ('GP', 'GP'), ('GM', 'GM'), ('GW', 'GW'), ('GQ', 'GQ'), ('GR', 'GR'), ('GD', 'GD'), ('GL', 'GL'), ('GT', 'GT'), ('GF', 'GF'), ('GU', 'GU'), ('GY', 'GY'), ('HK', 'HK'), ('HM', 'HM'), ('HN', 'HN'), ('HR', 'HR'), ('HT', 'HT'), ('HU', 'HU'), ('ID', 'ID'), ('IM', 'IM'), ('IN', 'IN'), ('IO', 'IO'), ('IE', 'IE'), ('IR', 'IR'), ('IQ', 'IQ'), ('IS', 'IS'), ('IL', 'IL'), ('IT', 'IT'), ('JM', 'JM'), ('JE', 'JE'), ('JO', 'JO'), ('JP', 'JP'), ('KZ', 'KZ'), ('KE', 'KE'), ('KG', 'KG'), ('KH', 'KH'), ('KI', 'KI'), ('KN', 'KN'), ('KR', 'KR'), ('KW', 'KW'), ('LA', 'LA'), ('LB', 'LB'), ('LR', 'LR'), ('LY', 'LY'), ('LC', 'LC'), ('LI', 'LI'), ('LK', 'LK'), ('LS', 'LS'), ('LT', 'LT'), ('LU', 'LU'), ('LV', 'LV'), ('MO', 'MO'), ('MF', 'MF'), ('MA', 'MA'), ('MC', 'MC'), ('MD', 'MD'), ('MG', 'MG'), ('MV', 'MV'), ('MX', 'MX'), ('MH', 'MH'), ('MK', 'MK'), ('ML', 'ML'), ('MT', 'MT'), ('MM', 'MM'), ('ME', 'ME'), ('MN', 'MN'), ('MP', 'MP'), ('MZ', 'MZ'), ('MR', 'MR'), ('MS', 'MS'), ('MQ', 'MQ'), ('MU', 'MU'), ('MW', 'MW'), ('MY', 'MY'), ('YT', 'YT'), ('NA', 'NA'), ('NC', 'NC'), ('NE', 'NE'), ('NF', 'NF'), ('NG', 'NG'), ('NI', 'NI'), ('NU', 'NU'), ('NL', 'NL'), ('NO', 'NO'), ('NP', 'NP'), ('NR', 'NR'), ('NZ', 'NZ'), ('OM', 'OM'), ('PK', 'PK'), ('PA', 'PA'), ('PN', 'PN'), ('PE', 'PE'), ('PH', 'PH'), ('PW', 'PW'), ('PG', 'PG'), ('PL', 'PL'), ('PR', 'PR'), ('KP', 'KP'), ('PT', 'PT'), ('PY', 'PY'), ('PS', 'PS'), ('PF', 'PF'), ('QA', 'QA'), ('RE', 'RE'), ('RO', 'RO'), ('RU', 'RU'), ('RW', 'RW'), ('SA', 'SA'), ('SD', 'SD'), ('SN', 'SN'), ('SG', 'SG'), ('GS', 'GS'), ('SH', 'SH'), ('SJ', 'SJ'), ('SB', 'SB'), ('SL', 'SL'), ('SV', 'SV'), ('SM', 'SM'), ('SO', 'SO'), ('PM', 'PM'), ('RS', 'RS'), ('SS', 'SS'), ('ST', 'ST'), ('SR', 'SR'), ('SK', 'SK'), ('SI', 'SI'), ('SE', 'SE'), ('SZ', 'SZ'), ('SX', 'SX'), ('SC', 'SC'), ('SY', 'SY'), ('TC', 'TC'), ('TD', 'TD'), ('TG', 'TG'), ('TH', 'TH'), ('TJ', 'TJ'), ('TK', 'TK'), ('TM', 'TM'), ('TL', 'TL'), ('TO', 'TO'), ('TT', 'TT'), ('TN', 'TN'), ('TR', 'TR'), ('TV', 'TV'), ('TW', 'TW'), ('TZ', 'TZ'), ('UG', 'UG'), ('UA', 'UA'), ('UM', 'UM'), ('UY', 'UY'), ('US', 'US'), ('UZ', 'UZ'), ('VA', 'VA'), ('VC', 'VC'), ('VE', 'VE'), ('VG', 'VG'), ('VI', 'VI'), ('VN', 'VN'), ('VU', 'VU'), ('WF', 'WF'), ('WS', 'WS'), ('YE', 'YE'), ('ZA', 'ZA'), ('ZM', 'ZM'), ('ZW', 'ZW')], default='IT', max_length=3, null=True)),
                ('country', models.CharField(blank=True, help_text='Country', max_length=128, null=True)),
                ('city', models.CharField(blank=True, help_text='City', max_length=128, null=True)),
                ('fiscal_code', models.CharField(help_text='Fiscal code or uniqueID', max_length=16, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('place_of_birth', models.CharField(max_length=128, null=True)),
                ('document_front', models.FileField(help_text='Identity card front', null=True, upload_to=identity.models._attachment_upload)),
                ('document_retro', models.FileField(help_text='Identity card retro', null=True, upload_to=identity.models._attachment_upload)),
                ('affiliation', models.CharField(choices=[('student,member', 'studente [student, member]'), ('staff,member', 'assistente universitario [staff, member]'), ('member', 'associato (ad es. CNR) [member]'), ('', 'cessato'), ('staff,member', 'collaboratore coordinato continuativo [staff, member]'), ('staff,member', 'collaboratore linguistico [staff, member]'), ('member', "consorziato (membro del consorzio a cui l'ente appartiene) [member]"), ('affiliate', 'convenzionato (cliente delle convenzioni) [affiliate]'), ('staff,member', 'cultore della materia [staff, member]'), ('staff,member', 'dipendente [staff, member]'), ('member', 'dipendente altra universit√† [member]'), ('member', 'dipendente altro ente di ricerca [member]'), ('member', 'dipendente azienda ospedaliera/policlinico [member]'), ('member', 'dipendente di altra azienda sanitaria [member]'), ('staff,member', 'direttore amministrativo [staff, member]'), ('staff,member', 'dirigente [staff, member]'), ('staff,member', 'dirigente a contratto [staff, member]'), ('staff,member', 'dirigente di ricerca [staff, member]'), ('staff,member', 'dirigente tecnologo [staff, member]'), ('staff,member', 'docente a contratto [staff, member]'), ('staff,member,student', 'dottorando [staff, member, student]'), ('member', 'dottorando di altra universit√† (consorziata) [member]'), ('staff,member', 'esperto linguistico [staff, member]'), ('affiliate', 'fornitore (dipendente o titolare delle ditte fornitrici) [affiliate]'), ('staff,member', 'interinale [staff, member]'), ('affiliate', 'ispettore generale [affiliate]'), ('member', 'laureato frequentatore/collaboratore di ricerca (a titolo gratuito) [member]'), ('staff,member', 'lavoratore occasionale (con contratto personale senza partita iva) [staff, member]'), ('member', 'lettore di scambio [member]'), ('staff,member', 'libero professionista (con contratto personale con partita iva) [staff, member]'), ('affiliate', 'ospite / visitatore [affiliate]'), ('staff,member', 'personale tecnico-amministrativo [staff, member]'), ('staff,member', 'personale tecnico-amministrativo a tempo determinato [staff, member]'), ('staff,member', 'primo ricercatore [staff, member]'), ('staff,member', 'primo tecnologo [staff, member]'), ('staff,member', 'professore associato [staff, member]'), ('member', 'professore emerito [member]'), ('staff,member', 'professore incaricato esterno [staff, member]'), ('staff,member', 'professore incaricato interno [staff, member]'), ('staff,member', 'professore ordinario [staff, member]'), ('staff,member', 'ricercatore [staff, member]'), ('staff,member,student', 'specializzando [staff, member, student]'), ('student', 'studente erasmus in ingresso [student]'), ('student,member', 'studente fuori sede (tesista, tirocinante, ...) [student, member]'), ('student,member', 'studente laurea specialistica [student, member]'), ('student,member', 'studente master [student, member]'), ('student,member', 'studente siss [student, member]'), ('staff,member', 'supervisore siss [staff, member]'), ('staff,member', 'supplente docente [staff, member]'), ('staff,member', 'tecnologo [staff, member]'), ('staff,member', 'titolare di assegno di ricerca [staff, member]'), ('member', 'titolare di borsa di studio [member]'), ('staff,member', 'tutor [staff, member]'), ('member', 'volontario servizio civile nazionale [member]')], default='studente [student, member]', help_text='Affiliation', max_length=128, null=True)),
                ('description', models.TextField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'ordering': ['created'],
                'verbose_name_plural': 'Digital Identities',
            },
        ),
        migrations.CreateModel(
            name='IdentityAffilitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IdentityAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('attachment', models.FileField(upload_to=identity.models._attachment_upload)),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IdentityCustomAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(help_text='name of the attribute', max_length=64)),
                ('value', models.TextField(help_text='value of the attribute')),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IdentityDelivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('value', models.CharField(help_text='mario.rossi@yahoo.it or 02 3467457. It depends by the type', max_length=135)),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.AddressType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IdentityRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IdentityAddress',
            fields=[
                ('abstractidentityaddress_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='identity.AbstractIdentityAddress')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
            ],
            options={
                'ordering': ['primary'],
                'verbose_name_plural': 'Addresses',
            },
            bases=('identity.abstractidentityaddress', models.Model),
        ),
        migrations.AddField(
            model_name='additionalaffiliation',
            name='identity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='identity.Identity'),
        ),
    ]
